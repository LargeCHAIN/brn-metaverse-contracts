{
  "contractName": "BrnPancakeSwapV2Integration",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_brnTokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "bnbTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "brnBnbPairExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "brnTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "pancakeSwapV2Factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "pancakeSwapV2Router",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "addBrnBnbPoolPair",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amountTokenDesired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amountTokenMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amountETHMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        }
      ],
      "name": "addBrnBnbLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountToken",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountETH",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_brnTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"}],\"name\":\"addBrnBnbLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addBrnBnbPoolPair\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bnbTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"brnBnbPairExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"brnTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pancakeSwapV2Factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pancakeSwapV2Router\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addBrnBnbLiquidity(uint256,uint256,uint256,uint256)\":{\"params\":{\"_amountETHMin\":\"uint The minimum amount of BNB to provide (slippage impact).\",\"_amountTokenDesired\":\"uint The amount of the BRN tokens you'd to provide as liquidity\",\"_amountTokenMin\":\"uint The minimum amount of the BRN to provide (slippage impact).\",\"_deadline\":\"uint Unix timestamp deadline by which the transaction must confirm.*\"}},\"addBrnBnbPoolPair()\":{\"details\":\"only callable by the contract ownerif the pair exists already, reverts with error message\",\"returns\":{\"success\":\"if pair was created \"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"BrnMeterverseUniswapV3Integration\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addBrnBnbLiquidity(uint256,uint256,uint256,uint256)\":{\"notice\":\"Adds liquidity to a BRN\\u21c4WBNB pool.\"},\"addBrnBnbPoolPair()\":{\"notice\":\"creates a new liquidoty pair for WBNB and BRN\"}},\"notice\":\"Handles all the PancakeSwap integration functions for the BRN token on PancakeSwap DEX\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/D/Dickens/Programming/Blockchain/Projects/JOBS/BrnMeterverse/contracts/BrnPancakeSwapV2Integration.sol\":\"BrnPancakeSwapV2Integration\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/Dickens/Programming/Blockchain/Projects/JOBS/BrnMeterverse/contracts/BrnPancakeSwapV2Integration.sol\":{\"keccak256\":\"0x121dfefacf5c50a82211c258cc22341c32eff4293268eace443dbc854ec4e24e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://570d33f6e26585ce401689ff5fdd58587feda33e1ca57238c1f5f7feacbd6af3\",\"dweb:/ipfs/QmQhr12rpMGV819mhkgUHytkgyuqThAHRjXAaCfeAGnycD\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "bytecode": "0x61010060405273bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c60a05273ca143ce32fe78f1f7019d7d551a6402fc5350c7360c0527310ed43c718714eb63d5aa57b78b54704e256024e60e05234801561005957600080fd5b50604051610aa0380380610aa0833981016040819052610078916100ff565b61009a61008c6401000000006100ab810204565b6401000000006100af810204565b600160a060020a031660805261012f565b3390565b60008054600160a060020a03838116600160a060020a0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561011157600080fd5b8151600160a060020a038116811461012857600080fd5b9392505050565b60805160a05160c05160e0516109006101a0600039600081816101b001526103440152600081816102360152818161047201526105f70152600081816102020152818161044701526105cc015260008181610138015281816102fa0152818161041f01526105a401526109006000f3fe6080604052600436106100ae576000357c010000000000000000000000000000000000000000000000000000000090048063731a77eb11610076578063731a77eb1461019e5780638da5cb5b146101d2578063b3b640df146101f0578063cda78eb514610224578063f2fde38b1461025857600080fd5b8063115d1619146100b35780633fcae7a1146100e6578063531366a8146101265780636854b87614610172578063715018a614610187575b600080fd5b6100c66100c13660046107df565b610278565b604080519384526020840192909252908201526060015b60405180910390f35b3480156100f257600080fd5b50610116610101366004610826565b60016020526000908152604090205460ff1681565b60405190151581526020016100dd565b34801561013257600080fd5b5061015a7f000000000000000000000000000000000000000000000000000000000000000081565b604051600160a060020a0390911681526020016100dd565b34801561017e57600080fd5b506101166103c1565b34801561019357600080fd5b5061019c610691565b005b3480156101aa57600080fd5b5061015a7f000000000000000000000000000000000000000000000000000000000000000081565b3480156101de57600080fd5b50600054600160a060020a031661015a565b3480156101fc57600080fd5b5061015a7f000000000000000000000000000000000000000000000000000000000000000081565b34801561023057600080fd5b5061015a7f000000000000000000000000000000000000000000000000000000000000000081565b34801561026457600080fd5b5061019c610273366004610826565b6106ca565b6000808033600160a060020a0316610298600054600160a060020a031690565b600160a060020a0316146102ca5760405160e560020a62461bcd0281526004016102c19061084a565b60405180910390fd5b6040517ff305d719000000000000000000000000000000000000000000000000000000008152600160a060020a037f00000000000000000000000000000000000000000000000000000000000000008116600483015260248201899052604482018890526064820187905233608483015260a482018690527f0000000000000000000000000000000000000000000000000000000000000000169063f305d7199060c4016060604051808303816000875af115801561038d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b1919061087f565b9250925092509450945094915050565b60008054600160a060020a031633146103ef5760405160e560020a62461bcd0281526004016102c19061084a565b6040517fe6a43905000000000000000000000000000000000000000000000000000000008152600160a060020a037f0000000000000000000000000000000000000000000000000000000000000000811660048301527f0000000000000000000000000000000000000000000000000000000000000000811660248301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063e6a4390590604401602060405180830381865afa1580156104bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104df91906108ad565b600160a060020a03811660009081526001602052604090205490915060ff16156105745760405160e560020a62461bcd02815260206004820152603460248201527f42524e204d6574657276657273652050616e63616b65537761703a20506f6f6c60448201527f205061697220416c72656164792045786973747300000000000000000000000060648201526084016102c1565b6040517fc9c65396000000000000000000000000000000000000000000000000000000008152600160a060020a037f0000000000000000000000000000000000000000000000000000000000000000811660048301527f0000000000000000000000000000000000000000000000000000000000000000811660248301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063c9c65396906044016020604051808303816000875af1158015610642573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066691906108ad565b600160a060020a03166000908152600160208190526040909120805460ff1916821790559250505090565b600054600160a060020a031633146106be5760405160e560020a62461bcd0281526004016102c19061084a565b6106c86000610782565b565b600054600160a060020a031633146106f75760405160e560020a62461bcd0281526004016102c19061084a565b600160a060020a0381166107765760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102c1565b61077f81610782565b50565b60008054600160a060020a0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600080608085870312156107f557600080fd5b5050823594602084013594506040840135936060013592509050565b600160a060020a038116811461077f57600080fd5b60006020828403121561083857600080fd5b813561084381610811565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008060006060848603121561089457600080fd5b8351925060208401519150604084015190509250925092565b6000602082840312156108bf57600080fd5b81516108438161081156fea26469706673582212203c90956be239d9bc294c291ba5425d2cf778e90a8206b50925db052356e13d3b64736f6c634300080b0033",
  "deployedBytecode": "0x6080604052600436106100ae576000357c010000000000000000000000000000000000000000000000000000000090048063731a77eb11610076578063731a77eb1461019e5780638da5cb5b146101d2578063b3b640df146101f0578063cda78eb514610224578063f2fde38b1461025857600080fd5b8063115d1619146100b35780633fcae7a1146100e6578063531366a8146101265780636854b87614610172578063715018a614610187575b600080fd5b6100c66100c13660046107df565b610278565b604080519384526020840192909252908201526060015b60405180910390f35b3480156100f257600080fd5b50610116610101366004610826565b60016020526000908152604090205460ff1681565b60405190151581526020016100dd565b34801561013257600080fd5b5061015a7f000000000000000000000000000000000000000000000000000000000000000081565b604051600160a060020a0390911681526020016100dd565b34801561017e57600080fd5b506101166103c1565b34801561019357600080fd5b5061019c610691565b005b3480156101aa57600080fd5b5061015a7f000000000000000000000000000000000000000000000000000000000000000081565b3480156101de57600080fd5b50600054600160a060020a031661015a565b3480156101fc57600080fd5b5061015a7f000000000000000000000000000000000000000000000000000000000000000081565b34801561023057600080fd5b5061015a7f000000000000000000000000000000000000000000000000000000000000000081565b34801561026457600080fd5b5061019c610273366004610826565b6106ca565b6000808033600160a060020a0316610298600054600160a060020a031690565b600160a060020a0316146102ca5760405160e560020a62461bcd0281526004016102c19061084a565b60405180910390fd5b6040517ff305d719000000000000000000000000000000000000000000000000000000008152600160a060020a037f00000000000000000000000000000000000000000000000000000000000000008116600483015260248201899052604482018890526064820187905233608483015260a482018690527f0000000000000000000000000000000000000000000000000000000000000000169063f305d7199060c4016060604051808303816000875af115801561038d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b1919061087f565b9250925092509450945094915050565b60008054600160a060020a031633146103ef5760405160e560020a62461bcd0281526004016102c19061084a565b6040517fe6a43905000000000000000000000000000000000000000000000000000000008152600160a060020a037f0000000000000000000000000000000000000000000000000000000000000000811660048301527f0000000000000000000000000000000000000000000000000000000000000000811660248301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063e6a4390590604401602060405180830381865afa1580156104bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104df91906108ad565b600160a060020a03811660009081526001602052604090205490915060ff16156105745760405160e560020a62461bcd02815260206004820152603460248201527f42524e204d6574657276657273652050616e63616b65537761703a20506f6f6c60448201527f205061697220416c72656164792045786973747300000000000000000000000060648201526084016102c1565b6040517fc9c65396000000000000000000000000000000000000000000000000000000008152600160a060020a037f0000000000000000000000000000000000000000000000000000000000000000811660048301527f0000000000000000000000000000000000000000000000000000000000000000811660248301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063c9c65396906044016020604051808303816000875af1158015610642573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066691906108ad565b600160a060020a03166000908152600160208190526040909120805460ff1916821790559250505090565b600054600160a060020a031633146106be5760405160e560020a62461bcd0281526004016102c19061084a565b6106c86000610782565b565b600054600160a060020a031633146106f75760405160e560020a62461bcd0281526004016102c19061084a565b600160a060020a0381166107765760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102c1565b61077f81610782565b50565b60008054600160a060020a0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600080608085870312156107f557600080fd5b5050823594602084013594506040840135936060013592509050565b600160a060020a038116811461077f57600080fd5b60006020828403121561083857600080fd5b813561084381610811565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008060006060848603121561089457600080fd5b8351925060208401519150604084015190509250925092565b6000602082840312156108bf57600080fd5b81516108438161081156fea26469706673582212203c90956be239d9bc294c291ba5425d2cf778e90a8206b50925db052356e13d3b64736f6c634300080b0033",
  "immutableReferences": {
    "1162": [
      {
        "length": 32,
        "start": 312
      },
      {
        "length": 32,
        "start": 762
      },
      {
        "length": 32,
        "start": 1055
      },
      {
        "length": 32,
        "start": 1444
      }
    ],
    "1165": [
      {
        "length": 32,
        "start": 514
      },
      {
        "length": 32,
        "start": 1095
      },
      {
        "length": 32,
        "start": 1484
      }
    ],
    "1168": [
      {
        "length": 32,
        "start": 566
      },
      {
        "length": 32,
        "start": 1138
      },
      {
        "length": 32,
        "start": 1527
      }
    ],
    "1171": [
      {
        "length": 32,
        "start": 432
      },
      {
        "length": 32,
        "start": 836
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:306:26",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:26",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:26",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:26",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:26",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:26"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:26"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:26"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:26"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:26"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:26",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:26"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:26"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:26"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:26"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:26",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:26",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:26",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:26"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:26"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:26"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:26"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:26"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:1:26",
                                        "type": "",
                                        "value": "2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "246:3:26",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "exp",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:26"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:26"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:26",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:26"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:26"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:26"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:26"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:26"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:26"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:26"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:26",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:26"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:26"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:26",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:26",
                "type": ""
              }
            ],
            "src": "14:290:26"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(exp(2, 160), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 26,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4274:26",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:26",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "135:264:26",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "182:16:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "191:1:26",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "194:1:26",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "184:6:26"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "184:12:26"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "184:12:26"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "156:7:26"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "165:9:26"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "152:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "152:23:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "177:3:26",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "148:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "148:33:26"
                  },
                  "nodeType": "YulIf",
                  "src": "145:53:26"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "207:33:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "230:9:26"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "217:12:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "217:23:26"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:26"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "249:42:26",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "276:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "287:2:26",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "272:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "272:18:26"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "259:12:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "259:32:26"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "249:6:26"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "300:42:26",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "327:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "338:2:26",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "323:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "323:18:26"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "310:12:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:32:26"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "300:6:26"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "351:42:26",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "378:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "389:2:26",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "374:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "374:18:26"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "361:12:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "361:32:26"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "351:6:26"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "77:9:26",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "88:7:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "100:6:26",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "108:6:26",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "116:6:26",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "124:6:26",
                "type": ""
              }
            ],
            "src": "14:385:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "561:162:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "571:26:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "583:9:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "594:2:26",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "579:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "579:18:26"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "571:4:26"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "613:9:26"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "624:6:26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "606:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "606:25:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "606:25:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "651:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "662:2:26",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "647:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "647:18:26"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "667:6:26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "640:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "640:34:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "640:34:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "694:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "705:2:26",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "690:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "690:18:26"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "710:6:26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "683:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "683:34:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "683:34:26"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "514:9:26",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "525:6:26",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "533:6:26",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "541:6:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "552:4:26",
                "type": ""
              }
            ],
            "src": "404:319:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "773:109:26",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "860:16:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "869:1:26",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "872:1:26",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "862:6:26"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "862:12:26"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "862:12:26"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "796:5:26"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "807:5:26"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "814:42:26",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "803:3:26"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "803:54:26"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "793:2:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "793:65:26"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "786:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "786:73:26"
                  },
                  "nodeType": "YulIf",
                  "src": "783:93:26"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "762:5:26",
                "type": ""
              }
            ],
            "src": "728:154:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "957:177:26",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1003:16:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1012:1:26",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1015:1:26",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1005:6:26"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1005:12:26"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1005:12:26"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "978:7:26"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "987:9:26"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "974:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "974:23:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "999:2:26",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "970:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "970:32:26"
                  },
                  "nodeType": "YulIf",
                  "src": "967:52:26"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1028:36:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1054:9:26"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1041:12:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1041:23:26"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1032:5:26",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1098:5:26"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1073:24:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1073:31:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1073:31:26"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1113:15:26",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1123:5:26"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1113:6:26"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "923:9:26",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "934:7:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "946:6:26",
                "type": ""
              }
            ],
            "src": "887:247:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1234:92:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1244:26:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1256:9:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1267:2:26",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1252:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1252:18:26"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1244:4:26"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1286:9:26"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1311:6:26"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1304:6:26"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1304:14:26"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1297:6:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1297:22:26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1279:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1279:41:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1279:41:26"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1203:9:26",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1214:6:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1225:4:26",
                "type": ""
              }
            ],
            "src": "1139:187:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1432:125:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1442:26:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1454:9:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1465:2:26",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1450:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1450:18:26"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1442:4:26"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1484:9:26"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1499:6:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1507:42:26",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1495:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1495:55:26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1477:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1477:74:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1477:74:26"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1401:9:26",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1412:6:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1423:4:26",
                "type": ""
              }
            ],
            "src": "1331:226:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1736:182:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1753:9:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1764:2:26",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1746:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1746:21:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1746:21:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1787:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1798:2:26",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1783:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1783:18:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1803:2:26",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1776:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1776:30:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1776:30:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1826:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1837:2:26",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1822:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1822:18:26"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1842:34:26",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1815:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1815:62:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1815:62:26"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1886:26:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1898:9:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1909:2:26",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1894:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1894:18:26"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1886:4:26"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1713:9:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1727:4:26",
                "type": ""
              }
            ],
            "src": "1562:356:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2172:373:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2182:27:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2194:9:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2205:3:26",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2190:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2190:19:26"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2182:4:26"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2218:52:26",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2228:42:26",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2222:2:26",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2286:9:26"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2301:6:26"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2309:2:26"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2297:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2297:15:26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2279:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2279:34:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2279:34:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2333:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2344:2:26",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2329:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2329:18:26"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2349:6:26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2322:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2322:34:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2322:34:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2376:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2387:2:26",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2372:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2372:18:26"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2392:6:26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2365:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2365:34:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2365:34:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2419:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2430:2:26",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2415:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2415:18:26"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "2435:6:26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2408:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2408:34:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2408:34:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2462:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2473:3:26",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2458:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2458:19:26"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "2483:6:26"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2491:2:26"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2479:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2479:15:26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2451:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2451:44:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2451:44:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2515:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2526:3:26",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2511:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2511:19:26"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "2532:6:26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2504:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2504:35:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2504:35:26"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_address_payable_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2101:9:26",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "2112:6:26",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2120:6:26",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2128:6:26",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2136:6:26",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2144:6:26",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2152:6:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2163:4:26",
                "type": ""
              }
            ],
            "src": "1923:622:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2665:191:26",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2711:16:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2720:1:26",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2723:1:26",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2713:6:26"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2713:12:26"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2713:12:26"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2686:7:26"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2695:9:26"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2682:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2682:23:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2707:2:26",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2678:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2678:32:26"
                  },
                  "nodeType": "YulIf",
                  "src": "2675:52:26"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2736:26:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2752:9:26"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2746:5:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2746:16:26"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2736:6:26"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2771:35:26",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2791:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2802:2:26",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2787:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2787:18:26"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2781:5:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2781:25:26"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2771:6:26"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2815:35:26",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2835:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2846:2:26",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2831:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2831:18:26"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2825:5:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2825:25:26"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2815:6:26"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2615:9:26",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2626:7:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2638:6:26",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2646:6:26",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2654:6:26",
                "type": ""
              }
            ],
            "src": "2550:306:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2990:198:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3000:26:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3012:9:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3023:2:26",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3008:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3008:18:26"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3000:4:26"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3035:52:26",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3045:42:26",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3039:2:26",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3103:9:26"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3118:6:26"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3126:2:26"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3114:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3114:15:26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3096:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3096:34:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3096:34:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3150:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3161:2:26",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3146:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3146:18:26"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3170:6:26"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3178:2:26"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3166:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3166:15:26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3139:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3139:43:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3139:43:26"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2951:9:26",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2962:6:26",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2970:6:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2981:4:26",
                "type": ""
              }
            ],
            "src": "2861:327:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3274:170:26",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3320:16:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3329:1:26",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3332:1:26",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3322:6:26"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3322:12:26"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3322:12:26"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3295:7:26"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3304:9:26"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3291:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3291:23:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3316:2:26",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3287:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3287:32:26"
                  },
                  "nodeType": "YulIf",
                  "src": "3284:52:26"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3345:29:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3364:9:26"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3358:5:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3358:16:26"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3349:5:26",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3408:5:26"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3383:24:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3383:31:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3383:31:26"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3423:15:26",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3433:5:26"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3423:6:26"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3240:9:26",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3251:7:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3263:6:26",
                "type": ""
              }
            ],
            "src": "3193:251:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3623:242:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3640:9:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3651:2:26",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3633:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3633:21:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3633:21:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3674:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3685:2:26",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3670:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3670:18:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3690:2:26",
                        "type": "",
                        "value": "52"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3663:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3663:30:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3663:30:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3713:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3724:2:26",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3709:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3709:18:26"
                      },
                      {
                        "hexValue": "42524e204d6574657276657273652050616e63616b65537761703a20506f6f6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3729:34:26",
                        "type": "",
                        "value": "BRN Meterverse PancakeSwap: Pool"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3702:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3702:62:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3702:62:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3784:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3795:2:26",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3780:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3780:18:26"
                      },
                      {
                        "hexValue": "205061697220416c726561647920457869737473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3800:22:26",
                        "type": "",
                        "value": " Pair Already Exists"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3773:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3773:50:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3773:50:26"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3832:27:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3844:9:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3855:3:26",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3840:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3840:19:26"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3832:4:26"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_62166f8cc38100bcc8710c880cc056b13712951a1586080a7e728b356df9119a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3600:9:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3614:4:26",
                "type": ""
              }
            ],
            "src": "3449:416:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4044:228:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4061:9:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4072:2:26",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4054:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4054:21:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4054:21:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4095:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4106:2:26",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4091:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4091:18:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4111:2:26",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4084:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4084:30:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4084:30:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4134:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4145:2:26",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4130:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4130:18:26"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4150:34:26",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4123:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4123:62:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4123:62:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4205:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4216:2:26",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4201:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4201:18:26"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4221:8:26",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4194:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4194:36:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4194:36:26"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4239:27:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4251:9:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4262:3:26",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4247:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4247:19:26"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4239:4:26"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4021:9:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4035:4:26",
                "type": ""
              }
            ],
            "src": "3870:402:26"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_address_payable_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_62166f8cc38100bcc8710c880cc056b13712951a1586080a7e728b356df9119a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"BRN Meterverse PancakeSwap: Pool\")\n        mstore(add(headStart, 96), \" Pair Already Exists\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 26,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "997:2386:2:-:0;;;1190:42;1147:85;;1308:42;1260:90;;1404:42;1357:89;;1516:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:7;940:12;:10;;;;:12;:::i;:::-;921:18;;;;:32;:::i;:::-;-1:-1:-1;;;;;1572:34:2;;;997:2386;;640:96:17;719:10;;640:96::o;2270:187:7:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:7;;;-1:-1:-1;;;;;;2378:17:7;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:290:26:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:26;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:26:o;:::-;997:2386:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "997:2386:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2798:582;;;;;;:::i;:::-;;:::i;:::-;;;;606:25:26;;;662:2;647:18;;640:34;;;;690:18;;;683:34;594:2;579:18;2798:582:2;;;;;;;;1459:48;;;;;;;;;;-1:-1:-1;1459:48:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1304:14:26;;1297:22;1279:41;;1267:2;1252:18;1459:48:2;1139:187:26;1055:40:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1495:55:26;;;1477:74;;1465:2;1450:18;1055:40:2;1331:226:26;1859:487:2;;;;;;;;;;;;;:::i;1668:101:7:-;;;;;;;;;;;;;:::i;:::-;;1357:89:2;;;;;;;;;;;;;;;1036:85:7;;;;;;;;;;-1:-1:-1;1082:7:7;1108:6;-1:-1:-1;;;;;1108:6:7;1036:85;;1147::2;;;;;;;;;;;;;;;1260:90;;;;;;;;;;;;;;;1918:198:7;;;;;;;;;;-1:-1:-1;1918:198:7;;;;;:::i;:::-;;:::i;2798:582:2:-;2993:16;;;719:10:17;-1:-1:-1;;;;;1248:23:7;:7;1082;1108:6;-1:-1:-1;;;;;1108:6:7;;1036:85;1248:7;-1:-1:-1;;;;;1248:23:7;;1240:68;;;;-1:-1:-1;;;;;1240:68:7;;;;;;;:::i;:::-;;;;;;;;;3064:308:2::1;::::0;;;;-1:-1:-1;;;;;3139:15:2::1;2297::26::0;;3064:308:2::1;::::0;::::1;2279:34:26::0;2329:18;;;2322:34;;;2372:18;;;2365:34;;;2415:18;;;2408:34;;;3288:10:2::1;2458:19:26::0;;;2451:44;2511:19;;;2504:35;;;3084:19:2::1;3064:56;::::0;::::1;::::0;2190:19:26;;3064:308:2::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3057:315;;;;;;2798:582:::0;;;;;;;;:::o;1859:487::-;1913:12;1108:6:7;;-1:-1:-1;;;;;1108:6:7;719:10:17;1248:23:7;1240:68;;;;-1:-1:-1;;;;;1240:68:7;;;;;;;:::i;:::-;1960:84:2::1;::::0;;;;-1:-1:-1;;;;;2011:15:2::1;3114::26::0;;1960:84:2::1;::::0;::::1;3096:34:26::0;2028:15:2::1;3166::26::0;;3146:18;;;3139:43;-1:-1:-1;;1981:20:2::1;1960:50:::0;;::::1;::::0;::::1;::::0;3008:18:26;;1960:84:2::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2063:30:2;::::1;;::::0;;;:16:::1;:30;::::0;;;;;1937:107;;-1:-1:-1;2063:30:2::1;;:39;2055:103;;;::::0;-1:-1:-1;;;;;2055:103:2;;3651:2:26;2055:103:2::1;::::0;::::1;3633:21:26::0;3690:2;3670:18;;;3663:30;3729:34;3709:18;;;3702:62;3800:22;3780:18;;;3773:50;3840:19;;2055:103:2::1;3449:416:26::0;2055:103:2::1;2187:86;::::0;;;;-1:-1:-1;;;;;2241:15:2::1;3114::26::0;;2187:86:2::1;::::0;::::1;3096:34:26::0;2257:15:2::1;3166::26::0;;3146:18;;;3139:43;-1:-1:-1;;2208:20:2::1;2187:53:::0;;::::1;::::0;::::1;::::0;3008:18:26;;2187:86:2::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2284:25:2::1;;::::0;;;2312:4:::1;2284:25;::::0;;;;;;;:32;;-1:-1:-1;;2284:32:2::1;::::0;::::1;::::0;;2312:4;-1:-1:-1;;;1859:487:2;:::o;1668:101:7:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:7;719:10:17;1248:23:7;1240:68;;;;-1:-1:-1;;;;;1240:68:7;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1918:198::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:7;719:10:17;1248:23:7;1240:68;;;;-1:-1:-1;;;;;1240:68:7;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:7;::::1;1998:73;;;::::0;-1:-1:-1;;;;;1998:73:7;;4072:2:26;1998:73:7::1;::::0;::::1;4054:21:26::0;4111:2;4091:18;;;4084:30;4150:34;4130:18;;;4123:62;4221:8;4201:18;;;4194:36;4247:19;;1998:73:7::1;3870:402:26::0;1998:73:7::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2270:187::-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:7;;;-1:-1:-1;;2378:17:7;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:385:26:-;100:6;108;116;124;177:3;165:9;156:7;152:23;148:33;145:53;;;194:1;191;184:12;145:53;-1:-1:-1;;217:23:26;;;287:2;272:18;;259:32;;-1:-1:-1;338:2:26;323:18;;310:32;;389:2;374:18;361:32;;-1:-1:-1;14:385:26;-1:-1:-1;14:385:26:o;728:154::-;-1:-1:-1;;;;;807:5:26;803:54;796:5;793:65;783:93;;872:1;869;862:12;887:247;946:6;999:2;987:9;978:7;974:23;970:32;967:52;;;1015:1;1012;1005:12;967:52;1054:9;1041:23;1073:31;1098:5;1073:31;:::i;:::-;1123:5;887:247;-1:-1:-1;;;887:247:26:o;1562:356::-;1764:2;1746:21;;;1783:18;;;1776:30;1842:34;1837:2;1822:18;;1815:62;1909:2;1894:18;;1562:356::o;2550:306::-;2638:6;2646;2654;2707:2;2695:9;2686:7;2682:23;2678:32;2675:52;;;2723:1;2720;2713:12;2675:52;2752:9;2746:16;2736:26;;2802:2;2791:9;2787:18;2781:25;2771:35;;2846:2;2835:9;2831:18;2825:25;2815:35;;2550:306;;;;;:::o;3193:251::-;3263:6;3316:2;3304:9;3295:7;3291:23;3287:32;3284:52;;;3332:1;3329;3322:12;3284:52;3364:9;3358:16;3383:31;3408:5;3383:31;:::i",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\npragma abicoder v2;\r\n\r\nimport '@openzeppelin/contracts/access/Ownable.sol';\r\n\r\n/**\r\n* @notice Interacts with pancakeswap to create a new liquidity pool pair for BRN/WBNB\r\n*/\r\ninterface PancakeSwapV2Factory{\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\r\n}\r\n\r\n/**\r\n* @notice Interacts with pancakeswap to create a new liquidity pool for the BRN/WBNB pair created\r\n*/\r\ninterface PancakeSwapV2Router{\r\n    function addLiquidityETH(\r\n    address token,\r\n    uint amountTokenDesired,\r\n    uint amountTokenMin,\r\n    uint amountETHMin,\r\n    address to,\r\n    uint deadline\r\n) external payable returns (uint amountToken, uint amountETH, uint liquidity);\r\n\r\n}\r\n/**\r\n* @title  BrnMeterverseUniswapV3Integration\r\n* @notice Handles all the PancakeSwap integration functions for the BRN token on PancakeSwap DEX\r\n*/\r\ncontract BrnPancakeSwapV2Integration is Ownable { \r\n\r\n    address public immutable brnTokenAddress;  //update to BRN address once it is deployed\r\n    address public immutable bnbTokenAddress = 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c; //WBNB (Wrapped BNB)\r\n    address public immutable pancakeSwapV2Factory = 0xcA143Ce32Fe78f1f7019d7d551a6402fC5350c73;\r\n    address public immutable pancakeSwapV2Router = 0x10ED43C718714eb63d5aA57B78B54704E256024E;\r\n    \r\n    mapping(address => bool) public brnBnbPairExists;\r\n\r\n    constructor(address _brnTokenAddress) public {\r\n        brnTokenAddress = _brnTokenAddress;\r\n    }\r\n\r\n    /**\r\n    * @notice creates a new liquidoty pair for WBNB and BRN\r\n    * @dev only callable by the contract owner\r\n    * @dev if the pair exists already, reverts with error message\r\n    * @return success if pair was created \r\n    */\r\n    function addBrnBnbPoolPair() public onlyOwner returns(bool success){\r\n        address existingPair = PancakeSwapV2Factory(pancakeSwapV2Factory).getPair(brnTokenAddress, bnbTokenAddress);\r\n        require(brnBnbPairExists[existingPair] == false,\"BRN Meterverse PancakeSwap: Pool Pair Already Exists\");\r\n        address newPair = PancakeSwapV2Factory(pancakeSwapV2Factory).createPair(brnTokenAddress,bnbTokenAddress);\r\n        brnBnbPairExists[newPair] = true;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n    * @notice Adds liquidity to a BRN⇄WBNB pool.\r\n    * @param _amountTokenDesired uint The amount of the BRN tokens you'd to provide as liquidity\r\n    * @param _amountTokenMin uint The minimum amount of the BRN to provide (slippage impact).\r\n    * @param _amountETHMin uint The minimum amount of BNB to provide (slippage impact).\r\n    * @param _deadline uint Unix timestamp deadline by which the transaction must confirm.\r\n    **/\r\n    function addBrnBnbLiquidity(\r\n        uint _amountTokenDesired, \r\n        uint _amountTokenMin, \r\n        uint _amountETHMin,\r\n        uint _deadline) \r\n        public payable onlyOwner returns (uint amountToken, uint amountETH, uint liquidity){\r\n            return PancakeSwapV2Router(pancakeSwapV2Router).addLiquidityETH(\r\n                brnTokenAddress, \r\n                _amountTokenDesired, \r\n                _amountTokenMin, \r\n                _amountETHMin,\r\n                payable(msg.sender), //Address of Liquidity Pool Token recipient\r\n                _deadline);\r\n    }\r\n}",
  "sourcePath": "D:/Dickens/Programming/Blockchain/Projects/JOBS/BrnMeterverse/contracts/BrnPancakeSwapV2Integration.sol",
  "ast": {
    "absolutePath": "/D/Dickens/Programming/Blockchain/Projects/JOBS/BrnMeterverse/contracts/BrnPancakeSwapV2Integration.sol",
    "exportedSymbols": {
      "BrnPancakeSwapV2Integration": [
        1269
      ],
      "Context": [
        3554
      ],
      "Ownable": [
        1890
      ],
      "PancakeSwapV2Factory": [
        1134
      ],
      "PancakeSwapV2Router": [
        1157
      ]
    },
    "id": 1270,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1112,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:2"
      },
      {
        "id": 1113,
        "literals": [
          "abicoder",
          "v2"
        ],
        "nodeType": "PragmaDirective",
        "src": "58:19:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1114,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1270,
        "sourceUnit": 1891,
        "src": "81:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "PancakeSwapV2Factory",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 1115,
          "nodeType": "StructuredDocumentation",
          "src": "137:94:2",
          "text": " @notice Interacts with pancakeswap to create a new liquidity pool pair for BRN/WBNB"
        },
        "fullyImplemented": false,
        "id": 1134,
        "linearizedBaseContracts": [
          1134
        ],
        "name": "PancakeSwapV2Factory",
        "nameLocation": "243:20:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "c9c65396",
            "id": 1124,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "279:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1117,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "298:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "290:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "290:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1119,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "314:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "306:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "306:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "289:32:2"
            },
            "returnParameters": {
              "id": 1123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1122,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "348:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "340:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "340:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "339:14:2"
            },
            "scope": 1134,
            "src": "270:84:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "e6a43905",
            "id": 1133,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPair",
            "nameLocation": "369:7:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1126,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "385:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1133,
                  "src": "377:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "377:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1128,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "401:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1133,
                  "src": "393:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "393:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "376:32:2"
            },
            "returnParameters": {
              "id": 1132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1131,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "440:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1133,
                  "src": "432:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "432:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "431:14:2"
            },
            "scope": 1134,
            "src": "360:86:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1270,
        "src": "233:216:2",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "PancakeSwapV2Router",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 1135,
          "nodeType": "StructuredDocumentation",
          "src": "453:106:2",
          "text": " @notice Interacts with pancakeswap to create a new liquidity pool for the BRN/WBNB pair created"
        },
        "fullyImplemented": false,
        "id": 1157,
        "linearizedBaseContracts": [
          1157
        ],
        "name": "PancakeSwapV2Router",
        "nameLocation": "571:19:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "f305d719",
            "id": 1156,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addLiquidityETH",
            "nameLocation": "606:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1137,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "636:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1156,
                  "src": "628:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1136,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "628:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1139,
                  "mutability": "mutable",
                  "name": "amountTokenDesired",
                  "nameLocation": "653:18:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1156,
                  "src": "648:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1138,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "648:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1141,
                  "mutability": "mutable",
                  "name": "amountTokenMin",
                  "nameLocation": "683:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1156,
                  "src": "678:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1140,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "678:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1143,
                  "mutability": "mutable",
                  "name": "amountETHMin",
                  "nameLocation": "709:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1156,
                  "src": "704:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1142,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "704:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1145,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "736:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1156,
                  "src": "728:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "728:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1147,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "750:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1156,
                  "src": "745:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1146,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "745:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "621:140:2"
            },
            "returnParameters": {
              "id": 1155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1150,
                  "mutability": "mutable",
                  "name": "amountToken",
                  "nameLocation": "793:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1156,
                  "src": "788:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1149,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "788:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1152,
                  "mutability": "mutable",
                  "name": "amountETH",
                  "nameLocation": "811:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1156,
                  "src": "806:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1151,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "806:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1154,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "827:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1156,
                  "src": "822:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1153,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "822:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "787:50:2"
            },
            "scope": 1157,
            "src": "597:241:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1270,
        "src": "561:282:2",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1159,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1890,
              "src": "1037:7:2"
            },
            "id": 1160,
            "nodeType": "InheritanceSpecifier",
            "src": "1037:7:2"
          }
        ],
        "canonicalName": "BrnPancakeSwapV2Integration",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1158,
          "nodeType": "StructuredDocumentation",
          "src": "845:150:2",
          "text": " @title  BrnMeterverseUniswapV3Integration\n @notice Handles all the PancakeSwap integration functions for the BRN token on PancakeSwap DEX"
        },
        "fullyImplemented": true,
        "id": 1269,
        "linearizedBaseContracts": [
          1269,
          1890,
          3554
        ],
        "name": "BrnPancakeSwapV2Integration",
        "nameLocation": "1006:27:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "531366a8",
            "id": 1162,
            "mutability": "immutable",
            "name": "brnTokenAddress",
            "nameLocation": "1080:15:2",
            "nodeType": "VariableDeclaration",
            "scope": 1269,
            "src": "1055:40:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1161,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1055:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b3b640df",
            "id": 1165,
            "mutability": "immutable",
            "name": "bnbTokenAddress",
            "nameLocation": "1172:15:2",
            "nodeType": "VariableDeclaration",
            "scope": 1269,
            "src": "1147:85:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1163,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1147:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862623443644239434264333642303162443163426145424632446530386439313733626330393563",
              "id": 1164,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1190:42:2",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cda78eb5",
            "id": 1168,
            "mutability": "immutable",
            "name": "pancakeSwapV2Factory",
            "nameLocation": "1285:20:2",
            "nodeType": "VariableDeclaration",
            "scope": 1269,
            "src": "1260:90:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1166,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1260:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307863413134334365333246653738663166373031396437643535316136343032664335333530633733",
              "id": 1167,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1308:42:2",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xcA143Ce32Fe78f1f7019d7d551a6402fC5350c73"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "731a77eb",
            "id": 1171,
            "mutability": "immutable",
            "name": "pancakeSwapV2Router",
            "nameLocation": "1382:19:2",
            "nodeType": "VariableDeclaration",
            "scope": 1269,
            "src": "1357:89:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1169,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1357:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831304544343343373138373134656236336435614135374237384235343730344532353630323445",
              "id": 1170,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1404:42:2",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x10ED43C718714eb63d5aA57B78B54704E256024E"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3fcae7a1",
            "id": 1175,
            "mutability": "mutable",
            "name": "brnBnbPairExists",
            "nameLocation": "1491:16:2",
            "nodeType": "VariableDeclaration",
            "scope": 1269,
            "src": "1459:48:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1174,
              "keyType": {
                "id": 1172,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1467:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1459:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1173,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1478:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1184,
              "nodeType": "Block",
              "src": "1561:53:2",
              "statements": [
                {
                  "expression": {
                    "id": 1182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1180,
                      "name": "brnTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1162,
                      "src": "1572:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1181,
                      "name": "_brnTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1177,
                      "src": "1590:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1572:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1183,
                  "nodeType": "ExpressionStatement",
                  "src": "1572:34:2"
                }
              ]
            },
            "id": 1185,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1177,
                  "mutability": "mutable",
                  "name": "_brnTokenAddress",
                  "nameLocation": "1536:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1185,
                  "src": "1528:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1176,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1528:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1527:26:2"
            },
            "returnParameters": {
              "id": 1179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1561:0:2"
            },
            "scope": 1269,
            "src": "1516:98:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1230,
              "nodeType": "Block",
              "src": "1926:420:2",
              "statements": [
                {
                  "assignments": [
                    1194
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1194,
                      "mutability": "mutable",
                      "name": "existingPair",
                      "nameLocation": "1945:12:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1230,
                      "src": "1937:20:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1193,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1937:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1202,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1199,
                        "name": "brnTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1162,
                        "src": "2011:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1200,
                        "name": "bnbTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1165,
                        "src": "2028:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1196,
                            "name": "pancakeSwapV2Factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1168,
                            "src": "1981:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1195,
                          "name": "PancakeSwapV2Factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1134,
                          "src": "1960:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PancakeSwapV2Factory_$1134_$",
                            "typeString": "type(contract PancakeSwapV2Factory)"
                          }
                        },
                        "id": 1197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1960:42:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PancakeSwapV2Factory_$1134",
                          "typeString": "contract PancakeSwapV2Factory"
                        }
                      },
                      "id": 1198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1133,
                      "src": "1960:50:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_address_$",
                        "typeString": "function (address,address) view external returns (address)"
                      }
                    },
                    "id": 1201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1960:84:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1937:107:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1204,
                            "name": "brnBnbPairExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1175,
                            "src": "2063:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1206,
                          "indexExpression": {
                            "id": 1205,
                            "name": "existingPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1194,
                            "src": "2080:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2063:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2097:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2063:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42524e204d6574657276657273652050616e63616b65537761703a20506f6f6c205061697220416c726561647920457869737473",
                        "id": 1209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2103:54:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62166f8cc38100bcc8710c880cc056b13712951a1586080a7e728b356df9119a",
                          "typeString": "literal_string \"BRN Meterverse PancakeSwap: Pool Pair Already Exists\""
                        },
                        "value": "BRN Meterverse PancakeSwap: Pool Pair Already Exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62166f8cc38100bcc8710c880cc056b13712951a1586080a7e728b356df9119a",
                          "typeString": "literal_string \"BRN Meterverse PancakeSwap: Pool Pair Already Exists\""
                        }
                      ],
                      "id": 1203,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2055:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2055:103:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1211,
                  "nodeType": "ExpressionStatement",
                  "src": "2055:103:2"
                },
                {
                  "assignments": [
                    1213
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1213,
                      "mutability": "mutable",
                      "name": "newPair",
                      "nameLocation": "2177:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1230,
                      "src": "2169:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1212,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2169:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1221,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1218,
                        "name": "brnTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1162,
                        "src": "2241:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1219,
                        "name": "bnbTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1165,
                        "src": "2257:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1215,
                            "name": "pancakeSwapV2Factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1168,
                            "src": "2208:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1214,
                          "name": "PancakeSwapV2Factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1134,
                          "src": "2187:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PancakeSwapV2Factory_$1134_$",
                            "typeString": "type(contract PancakeSwapV2Factory)"
                          }
                        },
                        "id": 1216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2187:42:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PancakeSwapV2Factory_$1134",
                          "typeString": "contract PancakeSwapV2Factory"
                        }
                      },
                      "id": 1217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1124,
                      "src": "2187:53:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
                        "typeString": "function (address,address) external returns (address)"
                      }
                    },
                    "id": 1220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2187:86:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2169:104:2"
                },
                {
                  "expression": {
                    "id": 1226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1222,
                        "name": "brnBnbPairExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1175,
                        "src": "2284:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1224,
                      "indexExpression": {
                        "id": 1223,
                        "name": "newPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1213,
                        "src": "2301:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2284:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2312:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2284:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1227,
                  "nodeType": "ExpressionStatement",
                  "src": "2284:32:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2334:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1192,
                  "id": 1229,
                  "nodeType": "Return",
                  "src": "2327:11:2"
                }
              ]
            },
            "documentation": {
              "id": 1186,
              "nodeType": "StructuredDocumentation",
              "src": "1622:231:2",
              "text": " @notice creates a new liquidoty pair for WBNB and BRN\n @dev only callable by the contract owner\n @dev if the pair exists already, reverts with error message\n @return success if pair was created "
            },
            "functionSelector": "6854b876",
            "id": 1231,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1189,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1188,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1832,
                  "src": "1895:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1895:9:2"
              }
            ],
            "name": "addBrnBnbPoolPair",
            "nameLocation": "1868:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1885:2:2"
            },
            "returnParameters": {
              "id": 1192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1191,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "1918:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1231,
                  "src": "1913:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1190,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1913:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1912:14:2"
            },
            "scope": 1269,
            "src": "1859:487:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1267,
              "nodeType": "Block",
              "src": "3042:338:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1255,
                        "name": "brnTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1162,
                        "src": "3139:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1256,
                        "name": "_amountTokenDesired",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1234,
                        "src": "3174:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1257,
                        "name": "_amountTokenMin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1236,
                        "src": "3213:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1258,
                        "name": "_amountETHMin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1238,
                        "src": "3248:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1261,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3288:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3288:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3280:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1259,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3280:8:2",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3280:19:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 1264,
                        "name": "_deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1240,
                        "src": "3362:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1252,
                            "name": "pancakeSwapV2Router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1171,
                            "src": "3084:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1251,
                          "name": "PancakeSwapV2Router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1157,
                          "src": "3064:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PancakeSwapV2Router_$1157_$",
                            "typeString": "type(contract PancakeSwapV2Router)"
                          }
                        },
                        "id": 1253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3064:40:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PancakeSwapV2Router_$1157",
                          "typeString": "contract PancakeSwapV2Router"
                        }
                      },
                      "id": 1254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addLiquidityETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1156,
                      "src": "3064:56:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 1265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3064:308:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 1250,
                  "id": 1266,
                  "nodeType": "Return",
                  "src": "3057:315:2"
                }
              ]
            },
            "documentation": {
              "id": 1232,
              "nodeType": "StructuredDocumentation",
              "src": "2354:438:2",
              "text": " @notice Adds liquidity to a BRN⇄WBNB pool.\n @param _amountTokenDesired uint The amount of the BRN tokens you'd to provide as liquidity\n @param _amountTokenMin uint The minimum amount of the BRN to provide (slippage impact).\n @param _amountETHMin uint The minimum amount of BNB to provide (slippage impact).\n @param _deadline uint Unix timestamp deadline by which the transaction must confirm.*"
            },
            "functionSelector": "115d1619",
            "id": 1268,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1243,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1242,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1832,
                  "src": "2974:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2974:9:2"
              }
            ],
            "name": "addBrnBnbLiquidity",
            "nameLocation": "2807:18:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1234,
                  "mutability": "mutable",
                  "name": "_amountTokenDesired",
                  "nameLocation": "2841:19:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "2836:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1233,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2836:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1236,
                  "mutability": "mutable",
                  "name": "_amountTokenMin",
                  "nameLocation": "2877:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "2872:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1235,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2872:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1238,
                  "mutability": "mutable",
                  "name": "_amountETHMin",
                  "nameLocation": "2909:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "2904:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1237,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2904:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1240,
                  "mutability": "mutable",
                  "name": "_deadline",
                  "nameLocation": "2938:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "2933:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1239,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2933:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2825:123:2"
            },
            "returnParameters": {
              "id": 1250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1245,
                  "mutability": "mutable",
                  "name": "amountToken",
                  "nameLocation": "2998:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "2993:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1244,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2993:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1247,
                  "mutability": "mutable",
                  "name": "amountETH",
                  "nameLocation": "3016:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "3011:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1246,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3011:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1249,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "3032:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "3027:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1248,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3027:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2992:50:2"
            },
            "scope": 1269,
            "src": "2798:582:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1270,
        "src": "997:2386:2",
        "usedErrors": []
      }
    ],
    "src": "33:3350:2"
  },
  "legacyAST": {
    "absolutePath": "/D/Dickens/Programming/Blockchain/Projects/JOBS/BrnMeterverse/contracts/BrnPancakeSwapV2Integration.sol",
    "exportedSymbols": {
      "BrnPancakeSwapV2Integration": [
        1269
      ],
      "Context": [
        3554
      ],
      "Ownable": [
        1890
      ],
      "PancakeSwapV2Factory": [
        1134
      ],
      "PancakeSwapV2Router": [
        1157
      ]
    },
    "id": 1270,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1112,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:2"
      },
      {
        "id": 1113,
        "literals": [
          "abicoder",
          "v2"
        ],
        "nodeType": "PragmaDirective",
        "src": "58:19:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1114,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1270,
        "sourceUnit": 1891,
        "src": "81:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "PancakeSwapV2Factory",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 1115,
          "nodeType": "StructuredDocumentation",
          "src": "137:94:2",
          "text": " @notice Interacts with pancakeswap to create a new liquidity pool pair for BRN/WBNB"
        },
        "fullyImplemented": false,
        "id": 1134,
        "linearizedBaseContracts": [
          1134
        ],
        "name": "PancakeSwapV2Factory",
        "nameLocation": "243:20:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "c9c65396",
            "id": 1124,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "279:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1117,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "298:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "290:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "290:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1119,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "314:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "306:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "306:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "289:32:2"
            },
            "returnParameters": {
              "id": 1123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1122,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "348:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "340:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "340:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "339:14:2"
            },
            "scope": 1134,
            "src": "270:84:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "e6a43905",
            "id": 1133,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPair",
            "nameLocation": "369:7:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1126,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "385:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1133,
                  "src": "377:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "377:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1128,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "401:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1133,
                  "src": "393:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "393:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "376:32:2"
            },
            "returnParameters": {
              "id": 1132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1131,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "440:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1133,
                  "src": "432:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "432:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "431:14:2"
            },
            "scope": 1134,
            "src": "360:86:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1270,
        "src": "233:216:2",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "PancakeSwapV2Router",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 1135,
          "nodeType": "StructuredDocumentation",
          "src": "453:106:2",
          "text": " @notice Interacts with pancakeswap to create a new liquidity pool for the BRN/WBNB pair created"
        },
        "fullyImplemented": false,
        "id": 1157,
        "linearizedBaseContracts": [
          1157
        ],
        "name": "PancakeSwapV2Router",
        "nameLocation": "571:19:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "f305d719",
            "id": 1156,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addLiquidityETH",
            "nameLocation": "606:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1137,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "636:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1156,
                  "src": "628:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1136,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "628:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1139,
                  "mutability": "mutable",
                  "name": "amountTokenDesired",
                  "nameLocation": "653:18:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1156,
                  "src": "648:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1138,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "648:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1141,
                  "mutability": "mutable",
                  "name": "amountTokenMin",
                  "nameLocation": "683:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1156,
                  "src": "678:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1140,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "678:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1143,
                  "mutability": "mutable",
                  "name": "amountETHMin",
                  "nameLocation": "709:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1156,
                  "src": "704:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1142,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "704:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1145,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "736:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1156,
                  "src": "728:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "728:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1147,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "750:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1156,
                  "src": "745:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1146,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "745:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "621:140:2"
            },
            "returnParameters": {
              "id": 1155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1150,
                  "mutability": "mutable",
                  "name": "amountToken",
                  "nameLocation": "793:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1156,
                  "src": "788:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1149,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "788:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1152,
                  "mutability": "mutable",
                  "name": "amountETH",
                  "nameLocation": "811:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1156,
                  "src": "806:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1151,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "806:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1154,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "827:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1156,
                  "src": "822:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1153,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "822:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "787:50:2"
            },
            "scope": 1157,
            "src": "597:241:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1270,
        "src": "561:282:2",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1159,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1890,
              "src": "1037:7:2"
            },
            "id": 1160,
            "nodeType": "InheritanceSpecifier",
            "src": "1037:7:2"
          }
        ],
        "canonicalName": "BrnPancakeSwapV2Integration",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1158,
          "nodeType": "StructuredDocumentation",
          "src": "845:150:2",
          "text": " @title  BrnMeterverseUniswapV3Integration\n @notice Handles all the PancakeSwap integration functions for the BRN token on PancakeSwap DEX"
        },
        "fullyImplemented": true,
        "id": 1269,
        "linearizedBaseContracts": [
          1269,
          1890,
          3554
        ],
        "name": "BrnPancakeSwapV2Integration",
        "nameLocation": "1006:27:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "531366a8",
            "id": 1162,
            "mutability": "immutable",
            "name": "brnTokenAddress",
            "nameLocation": "1080:15:2",
            "nodeType": "VariableDeclaration",
            "scope": 1269,
            "src": "1055:40:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1161,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1055:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b3b640df",
            "id": 1165,
            "mutability": "immutable",
            "name": "bnbTokenAddress",
            "nameLocation": "1172:15:2",
            "nodeType": "VariableDeclaration",
            "scope": 1269,
            "src": "1147:85:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1163,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1147:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862623443644239434264333642303162443163426145424632446530386439313733626330393563",
              "id": 1164,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1190:42:2",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cda78eb5",
            "id": 1168,
            "mutability": "immutable",
            "name": "pancakeSwapV2Factory",
            "nameLocation": "1285:20:2",
            "nodeType": "VariableDeclaration",
            "scope": 1269,
            "src": "1260:90:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1166,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1260:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307863413134334365333246653738663166373031396437643535316136343032664335333530633733",
              "id": 1167,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1308:42:2",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xcA143Ce32Fe78f1f7019d7d551a6402fC5350c73"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "731a77eb",
            "id": 1171,
            "mutability": "immutable",
            "name": "pancakeSwapV2Router",
            "nameLocation": "1382:19:2",
            "nodeType": "VariableDeclaration",
            "scope": 1269,
            "src": "1357:89:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1169,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1357:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831304544343343373138373134656236336435614135374237384235343730344532353630323445",
              "id": 1170,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1404:42:2",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x10ED43C718714eb63d5aA57B78B54704E256024E"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3fcae7a1",
            "id": 1175,
            "mutability": "mutable",
            "name": "brnBnbPairExists",
            "nameLocation": "1491:16:2",
            "nodeType": "VariableDeclaration",
            "scope": 1269,
            "src": "1459:48:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1174,
              "keyType": {
                "id": 1172,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1467:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1459:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1173,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1478:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1184,
              "nodeType": "Block",
              "src": "1561:53:2",
              "statements": [
                {
                  "expression": {
                    "id": 1182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1180,
                      "name": "brnTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1162,
                      "src": "1572:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1181,
                      "name": "_brnTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1177,
                      "src": "1590:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1572:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1183,
                  "nodeType": "ExpressionStatement",
                  "src": "1572:34:2"
                }
              ]
            },
            "id": 1185,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1177,
                  "mutability": "mutable",
                  "name": "_brnTokenAddress",
                  "nameLocation": "1536:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1185,
                  "src": "1528:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1176,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1528:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1527:26:2"
            },
            "returnParameters": {
              "id": 1179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1561:0:2"
            },
            "scope": 1269,
            "src": "1516:98:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1230,
              "nodeType": "Block",
              "src": "1926:420:2",
              "statements": [
                {
                  "assignments": [
                    1194
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1194,
                      "mutability": "mutable",
                      "name": "existingPair",
                      "nameLocation": "1945:12:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1230,
                      "src": "1937:20:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1193,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1937:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1202,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1199,
                        "name": "brnTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1162,
                        "src": "2011:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1200,
                        "name": "bnbTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1165,
                        "src": "2028:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1196,
                            "name": "pancakeSwapV2Factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1168,
                            "src": "1981:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1195,
                          "name": "PancakeSwapV2Factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1134,
                          "src": "1960:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PancakeSwapV2Factory_$1134_$",
                            "typeString": "type(contract PancakeSwapV2Factory)"
                          }
                        },
                        "id": 1197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1960:42:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PancakeSwapV2Factory_$1134",
                          "typeString": "contract PancakeSwapV2Factory"
                        }
                      },
                      "id": 1198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1133,
                      "src": "1960:50:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_address_$",
                        "typeString": "function (address,address) view external returns (address)"
                      }
                    },
                    "id": 1201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1960:84:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1937:107:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1204,
                            "name": "brnBnbPairExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1175,
                            "src": "2063:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1206,
                          "indexExpression": {
                            "id": 1205,
                            "name": "existingPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1194,
                            "src": "2080:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2063:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2097:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2063:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42524e204d6574657276657273652050616e63616b65537761703a20506f6f6c205061697220416c726561647920457869737473",
                        "id": 1209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2103:54:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62166f8cc38100bcc8710c880cc056b13712951a1586080a7e728b356df9119a",
                          "typeString": "literal_string \"BRN Meterverse PancakeSwap: Pool Pair Already Exists\""
                        },
                        "value": "BRN Meterverse PancakeSwap: Pool Pair Already Exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62166f8cc38100bcc8710c880cc056b13712951a1586080a7e728b356df9119a",
                          "typeString": "literal_string \"BRN Meterverse PancakeSwap: Pool Pair Already Exists\""
                        }
                      ],
                      "id": 1203,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2055:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2055:103:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1211,
                  "nodeType": "ExpressionStatement",
                  "src": "2055:103:2"
                },
                {
                  "assignments": [
                    1213
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1213,
                      "mutability": "mutable",
                      "name": "newPair",
                      "nameLocation": "2177:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1230,
                      "src": "2169:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1212,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2169:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1221,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1218,
                        "name": "brnTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1162,
                        "src": "2241:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1219,
                        "name": "bnbTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1165,
                        "src": "2257:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1215,
                            "name": "pancakeSwapV2Factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1168,
                            "src": "2208:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1214,
                          "name": "PancakeSwapV2Factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1134,
                          "src": "2187:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PancakeSwapV2Factory_$1134_$",
                            "typeString": "type(contract PancakeSwapV2Factory)"
                          }
                        },
                        "id": 1216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2187:42:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PancakeSwapV2Factory_$1134",
                          "typeString": "contract PancakeSwapV2Factory"
                        }
                      },
                      "id": 1217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1124,
                      "src": "2187:53:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
                        "typeString": "function (address,address) external returns (address)"
                      }
                    },
                    "id": 1220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2187:86:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2169:104:2"
                },
                {
                  "expression": {
                    "id": 1226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1222,
                        "name": "brnBnbPairExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1175,
                        "src": "2284:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1224,
                      "indexExpression": {
                        "id": 1223,
                        "name": "newPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1213,
                        "src": "2301:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2284:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2312:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2284:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1227,
                  "nodeType": "ExpressionStatement",
                  "src": "2284:32:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2334:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1192,
                  "id": 1229,
                  "nodeType": "Return",
                  "src": "2327:11:2"
                }
              ]
            },
            "documentation": {
              "id": 1186,
              "nodeType": "StructuredDocumentation",
              "src": "1622:231:2",
              "text": " @notice creates a new liquidoty pair for WBNB and BRN\n @dev only callable by the contract owner\n @dev if the pair exists already, reverts with error message\n @return success if pair was created "
            },
            "functionSelector": "6854b876",
            "id": 1231,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1189,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1188,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1832,
                  "src": "1895:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1895:9:2"
              }
            ],
            "name": "addBrnBnbPoolPair",
            "nameLocation": "1868:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1885:2:2"
            },
            "returnParameters": {
              "id": 1192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1191,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "1918:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1231,
                  "src": "1913:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1190,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1913:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1912:14:2"
            },
            "scope": 1269,
            "src": "1859:487:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1267,
              "nodeType": "Block",
              "src": "3042:338:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1255,
                        "name": "brnTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1162,
                        "src": "3139:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1256,
                        "name": "_amountTokenDesired",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1234,
                        "src": "3174:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1257,
                        "name": "_amountTokenMin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1236,
                        "src": "3213:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1258,
                        "name": "_amountETHMin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1238,
                        "src": "3248:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1261,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3288:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3288:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3280:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1259,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3280:8:2",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3280:19:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 1264,
                        "name": "_deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1240,
                        "src": "3362:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1252,
                            "name": "pancakeSwapV2Router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1171,
                            "src": "3084:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1251,
                          "name": "PancakeSwapV2Router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1157,
                          "src": "3064:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PancakeSwapV2Router_$1157_$",
                            "typeString": "type(contract PancakeSwapV2Router)"
                          }
                        },
                        "id": 1253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3064:40:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PancakeSwapV2Router_$1157",
                          "typeString": "contract PancakeSwapV2Router"
                        }
                      },
                      "id": 1254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addLiquidityETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1156,
                      "src": "3064:56:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 1265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3064:308:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 1250,
                  "id": 1266,
                  "nodeType": "Return",
                  "src": "3057:315:2"
                }
              ]
            },
            "documentation": {
              "id": 1232,
              "nodeType": "StructuredDocumentation",
              "src": "2354:438:2",
              "text": " @notice Adds liquidity to a BRN⇄WBNB pool.\n @param _amountTokenDesired uint The amount of the BRN tokens you'd to provide as liquidity\n @param _amountTokenMin uint The minimum amount of the BRN to provide (slippage impact).\n @param _amountETHMin uint The minimum amount of BNB to provide (slippage impact).\n @param _deadline uint Unix timestamp deadline by which the transaction must confirm.*"
            },
            "functionSelector": "115d1619",
            "id": 1268,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1243,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1242,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1832,
                  "src": "2974:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2974:9:2"
              }
            ],
            "name": "addBrnBnbLiquidity",
            "nameLocation": "2807:18:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1234,
                  "mutability": "mutable",
                  "name": "_amountTokenDesired",
                  "nameLocation": "2841:19:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "2836:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1233,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2836:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1236,
                  "mutability": "mutable",
                  "name": "_amountTokenMin",
                  "nameLocation": "2877:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "2872:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1235,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2872:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1238,
                  "mutability": "mutable",
                  "name": "_amountETHMin",
                  "nameLocation": "2909:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "2904:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1237,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2904:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1240,
                  "mutability": "mutable",
                  "name": "_deadline",
                  "nameLocation": "2938:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "2933:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1239,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2933:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2825:123:2"
            },
            "returnParameters": {
              "id": 1250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1245,
                  "mutability": "mutable",
                  "name": "amountToken",
                  "nameLocation": "2998:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "2993:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1244,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2993:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1247,
                  "mutability": "mutable",
                  "name": "amountETH",
                  "nameLocation": "3016:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "3011:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1246,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3011:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1249,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "3032:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "3027:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1248,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3027:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2992:50:2"
            },
            "scope": 1269,
            "src": "2798:582:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1270,
        "src": "997:2386:2",
        "usedErrors": []
      }
    ],
    "src": "33:3350:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {
    "97": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x0b3997E9f863Aa1199614e592015e419f2485B18",
      "transactionHash": "0x59ef97918a7dae1c3a8dc8daca7961ced7a917f37c8512f087dc743546104814"
    },
    "1643617012830": {
      "events": {},
      "links": {},
      "address": "0xcaa959B471D6e6d759Cf3De0e90860EE384F4A35",
      "transactionHash": "0xac0e630bfa4269e4fa6bbc274bfd8ab06b4fb9d391bf4b124f043d8d96b292f9"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2022-01-31T10:23:23.001Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addBrnBnbLiquidity(uint256,uint256,uint256,uint256)": {
        "params": {
          "_amountETHMin": "uint The minimum amount of BNB to provide (slippage impact).",
          "_amountTokenDesired": "uint The amount of the BRN tokens you'd to provide as liquidity",
          "_amountTokenMin": "uint The minimum amount of the BRN to provide (slippage impact).",
          "_deadline": "uint Unix timestamp deadline by which the transaction must confirm.*"
        }
      },
      "addBrnBnbPoolPair()": {
        "details": "only callable by the contract ownerif the pair exists already, reverts with error message",
        "returns": {
          "success": "if pair was created "
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "BrnMeterverseUniswapV3Integration",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addBrnBnbLiquidity(uint256,uint256,uint256,uint256)": {
        "notice": "Adds liquidity to a BRN⇄WBNB pool."
      },
      "addBrnBnbPoolPair()": {
        "notice": "creates a new liquidoty pair for WBNB and BRN"
      }
    },
    "notice": "Handles all the PancakeSwap integration functions for the BRN token on PancakeSwap DEX",
    "version": 1
  }
}